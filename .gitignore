## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates
*.o
# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs
.sqlite
# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
.vs/
build/
# Visual Studio 2015 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# DNX
project.lock.json
project.fragment.lock.json
artifacts/

*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings
# but database connection strings (with potential passwords) will be unencrypted
#*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config
# NuGet v3's project.json files produces more ignoreable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
node_modules/
orleans.codegen.cs

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# JetBrains Rider
.idea/
*.sln.iml

# CodeRush
.cr/

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc
*.sqlite
build/CMakeFiles/Trivia-Project.dir/TriviaProject/Communicator.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/Game.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/GameManager.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/GameRequestHandler.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/HighscoreTable.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/IRequestHandler.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/JsoneResponsePacketSerializer.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/JsonRequestPacketDeserializer.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/LoggedUser.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/LoginManager.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/LoginRequestHandler.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/Main.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/MenuRequestHandler.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/Question.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/RequestHandlerFactory.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/Room.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/RoomAdminRequestHandler.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/RoomManager.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/RoomMemberRequestHandler.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/Server.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/SqliteDatabase.cpp.o
build/CMakeFiles/Trivia-Project.dir/TriviaProject/WSAInitializer.cpp.o
build/.ninja_log
build/build.ninja
build/cmake_install.cmake
build/CMakeCache.txt
build/compile_commands.json
build/CPackConfig.cmake
build/CPackSourceConfig.cmake
build/CTestTestfile.cmake
build/DartConfiguration.tcl
build/rules.ninja
build/Trivia-Project
build/.cmake/api/v1/query/client-vscode/query.json
build/.cmake/api/v1/reply/cache-v2-31fc9496a0e34645b8b0.json
build/.cmake/api/v1/reply/codemodel-v2-cdab6b049e118d321143.json
build/.cmake/api/v1/reply/index-2020-04-25T08-58-13-0888.json
build/.cmake/api/v1/reply/target-Continuous-Debug-ccb7ffa9978a17909427.json
build/.cmake/api/v1/reply/target-ContinuousBuild-Debug-fbe5c6f13f9d0b0fda7f.json
build/.cmake/api/v1/reply/target-ContinuousConfigure-Debug-e50d85f92dff45137d08.json
build/.cmake/api/v1/reply/target-ContinuousCoverage-Debug-8e77c9844717b5d78f1d.json
build/.cmake/api/v1/reply/target-ContinuousMemCheck-Debug-6dc397776ac62b583443.json
build/.cmake/api/v1/reply/target-ContinuousStart-Debug-e5333a93d322bdca7e2c.json
build/.cmake/api/v1/reply/target-ContinuousSubmit-Debug-4fa6b21fb7b292361882.json
build/.cmake/api/v1/reply/target-ContinuousTest-Debug-568a9c9a705921553383.json
build/.cmake/api/v1/reply/target-ContinuousUpdate-Debug-64371bec26c652a83b2a.json
build/.cmake/api/v1/reply/target-Experimental-Debug-9dd5df03d773a90f3c92.json
build/.cmake/api/v1/reply/target-ExperimentalBuild-Debug-73bb360ec85e77324b07.json
build/.cmake/api/v1/reply/target-ExperimentalConfigure-Debug-16d715fabac2df4f738b.json
build/.cmake/api/v1/reply/target-ExperimentalCoverage-Debug-84b4a72b86a74a7b0c74.json
build/.cmake/api/v1/reply/target-ExperimentalMemCheck-Debug-e2a5c5b061800616824e.json
build/.cmake/api/v1/reply/target-ExperimentalStart-Debug-7113052b00f034005848.json
build/.cmake/api/v1/reply/target-ExperimentalSubmit-Debug-5845b4f637743a5446be.json
build/.cmake/api/v1/reply/target-ExperimentalTest-Debug-46e37abeefe8d5146a50.json
build/.cmake/api/v1/reply/target-ExperimentalUpdate-Debug-88df2b117e6a7cd48b33.json
build/.cmake/api/v1/reply/target-Nightly-Debug-cea50abb2f464ca0229a.json
build/.cmake/api/v1/reply/target-NightlyBuild-Debug-afccd0465e4b8c1e2d87.json
build/.cmake/api/v1/reply/target-NightlyConfigure-Debug-7ec533b122c4c2965696.json
build/.cmake/api/v1/reply/target-NightlyCoverage-Debug-e2b20065ab4aa5f75d86.json
build/.cmake/api/v1/reply/target-NightlyMemCheck-Debug-8eda9eba68978ec4ed5b.json
build/.cmake/api/v1/reply/target-NightlyMemoryCheck-Debug-784f4a2876bbb9b4bcea.json
build/.cmake/api/v1/reply/target-NightlyStart-Debug-87062bf9eaacc239a2bf.json
build/.cmake/api/v1/reply/target-NightlySubmit-Debug-00614dd8d283eaa542b9.json
build/.cmake/api/v1/reply/target-NightlyTest-Debug-b8d330abdb63439bfe9e.json
build/.cmake/api/v1/reply/target-NightlyUpdate-Debug-b681408b94dc782d2255.json
build/.cmake/api/v1/reply/target-Trivia-Project-Debug-2b25906b5044a985163d.json
build/CMakeFiles/cmake.check_cache
build/CMakeFiles/TargetDirectories.txt
build/CMakeFiles/3.16.3/CMakeCCompiler.cmake
build/CMakeFiles/3.16.3/CMakeCXXCompiler.cmake
build/CMakeFiles/3.16.3/CMakeDetermineCompilerABI_C.bin
build/CMakeFiles/3.16.3/CMakeDetermineCompilerABI_CXX.bin
build/CMakeFiles/3.16.3/CMakeSystem.cmake
build/CMakeFiles/3.16.3/CompilerIdC/a.out
build/CMakeFiles/3.16.3/CompilerIdC/CMakeCCompilerId.c
build/CMakeFiles/3.16.3/CompilerIdCXX/a.out
build/CMakeFiles/3.16.3/CompilerIdCXX/CMakeCXXCompilerId.cpp
build/Testing/TAG
build/Testing/20200425-0900/Test.xml
build/Testing/Temporary/CTestCostData.txt
